{"version":3,"file":"static/js/236.5367e084.chunk.js","mappings":"8QAUMA,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,WACnBC,MAAOJ,EAAAA,KAAaG,WACpBE,SAAUL,EAAAA,KAAaG,aAYnBG,EAAgB,CACpBJ,KAAM,GACNE,MAAO,GACPC,SAAU,IAGCE,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAKXC,GAASC,EAAAA,EAAAA,IAAU,CACvBL,cAAeA,EACfM,iBAAkBb,EAClBc,SAPmB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BP,EAASQ,EAAAA,GAAAA,SAAwBF,IACjCC,OAQF,OACE,UAACE,EAAA,EAAD,CACEC,UAAU,OACVL,SAAUH,EAAOS,aACjBC,GAAI,CACFC,GAAI,EACJC,UAAW,UALf,WAQE,SAACC,EAAA,EAAD,CACEC,OAAO,SACPrB,UAAQ,EACRsB,WAAS,EACTC,GAAG,OACHC,MAAM,OACNzB,KAAK,OACL0B,MAAOlB,EAAOI,OAAOZ,KACrB2B,SAAUnB,EAAOoB,aACjBC,MAAOrB,EAAOsB,QAAQ9B,MAAQ+B,QAAQvB,EAAOwB,OAAOhC,MACpDiC,aAAa,OACbC,WAAS,KAEX,SAACb,EAAA,EAAD,CACEC,OAAO,SACPrB,UAAQ,EACRsB,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNzB,KAAK,QACL0B,MAAOlB,EAAOI,OAAOV,MACrByB,SAAUnB,EAAOoB,aACjBC,MAAOrB,EAAOsB,QAAQ5B,OAAS6B,QAAQvB,EAAOwB,OAAO9B,OACrD+B,aAAa,QACbC,WAAS,KAEX,SAACb,EAAA,EAAD,CACEC,OAAO,SACPrB,UAAQ,EACRsB,WAAS,EACTvB,KAAK,WACLyB,MAAM,WACNU,KAAK,WACLX,GAAG,WACHE,MAAOlB,EAAOI,OAAOT,SACrBwB,SAAUnB,EAAOoB,aACjBC,MAAOrB,EAAOsB,QAAQ3B,UAAY4B,QAAQvB,EAAOwB,OAAO7B,UACxD8B,aAAa,sBAEf,SAACG,EAAA,EAAD,CAAQD,KAAK,SAASE,QAAQ,YAAYnB,GAAI,CAAEC,GAAI,EAAGmB,GAAI,EAAGC,GAAI,GAAlE,yB,uCCtDN,EA1BiB,WACf,OAEE,SAACC,EAAA,EAAD,CAAWxB,UAAU,OAAOyB,SAAS,KAArC,UAEE,UAAC1B,EAAA,EAAD,CACEG,GAAI,CACFwB,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAQ5B,GAAI,CAAE6B,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYlC,UAAU,KAAKqB,QAAQ,KAAnC,sBAGA,SAAChC,EAAD,W,yBC5BJ8C,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,MAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,uNACD,oBAEJN,EAAQ,EAAUG","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx","../node_modules/@mui/icons-material/LockOpenOutlined.js"],"sourcesContent":["// import { Formik} from 'formik';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\n// import { toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\nimport { authOperations } from 'redux/auth';\nimport { Box, Button, TextField } from '@mui/material';\n// import { FormEl, Label, Input, ErrorText, Button } from './RegisterForm.styled';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().required(),\n  password: yup.string().required(),\n});\n\n// const FormError = ({ name }) => {\n//   return (\n//     <ErrorMessage\n//       name={name}\n//       render={message => <ErrorText>{message}</ErrorText>}\n//     />\n//   );\n// };\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(authOperations.register(values));\n    resetForm();\n  };\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: schema,\n    onSubmit: handleSubmit,\n  });\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={formik.handleSubmit}\n      sx={{\n        mt: 1,\n        textAlign: 'center',\n      }}\n    >\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"name\"\n        label=\"Name\"\n        name=\"name\"\n        value={formik.values.name}\n        onChange={formik.handleChange}\n        error={formik.touched.name && Boolean(formik.errors.name)}\n        autoComplete=\"name\"\n        autoFocus\n      />\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"email\"\n        label=\"Email Address\"\n        name=\"email\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        autoComplete=\"email\"\n        autoFocus\n      />\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        id=\"password\"\n        value={formik.values.password}\n        onChange={formik.handleChange}\n        error={formik.touched.password && Boolean(formik.errors.password)}\n        autoComplete=\"current-password\"\n      />\n      <Button type=\"submit\" variant=\"contained\" sx={{ mt: 3, mb: 2, px: 3 }}>\n        Sign Up\n      </Button>\n    </Box>\n    // <Formik\n    //   initialValues={initialValues}\n    //   validationSchema={schema}\n    //   onSubmit={handleSubmit}\n    // >\n    //   <FormEl autoComplete=\"off\">\n    //     <Label>\n    //       <span>Name</span>\n    //       <Input type=\"text\" name=\"name\" />\n    //       <FormError name=\"name\" />\n    //     </Label>\n    //     <Label>\n    //       <span>Email</span>\n    //       <Input type=\"email\" name=\"email\" />\n    //       <FormError name=\"email\" />\n    //     </Label>\n    //     <Label>\n    //       <span>Password</span>\n    //       <Input type=\"password\" name=\"password\" />\n    //       <FormError name=\"password\" />\n    //     </Label>\n    //     <Button type=\"submit\">Sign up</Button>\n    //   </FormEl>\n    // </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport LockOpenOutlinedIcon from '@mui/icons-material/LockOpenOutlined';\nimport {\n  Avatar,\n  Box,\n  Container,\n  // CssBaseline,\n  Typography,\n} from '@mui/material';\n// import { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst Register = () => {\n  return (\n    // <ThemeProvider theme={theme}>\n    <Container component=\"main\" maxWidth=\"xs\">\n      {/* <CssBaseline /> */}\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOpenOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <RegisterForm />\n      </Box>\n    </Container>\n    // </ThemeProvider>\n  );\n};\n\nexport default Register;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h2c0-1.66 1.34-3 3-3s3 1.34 3 3v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm0 12H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z\"\n}), 'LockOpenOutlined');\n\nexports.default = _default;"],"names":["schema","yup","shape","name","required","email","password","initialValues","RegisterForm","dispatch","useDispatch","formik","useFormik","validationSchema","onSubmit","values","resetForm","authOperations","Box","component","handleSubmit","sx","mt","textAlign","TextField","margin","fullWidth","id","label","value","onChange","handleChange","error","touched","Boolean","errors","autoComplete","autoFocus","type","Button","variant","mb","px","Container","maxWidth","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOpenOutlined","Typography","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}