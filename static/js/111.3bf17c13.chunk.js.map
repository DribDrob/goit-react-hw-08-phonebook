{"version":3,"file":"static/js/111.3bf17c13.chunk.js","mappings":"8QASMA,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaG,WACpBC,SAAUJ,EAAAA,KAAaG,aAYnBE,EAAgB,CACpBH,MAAO,GACPE,SAAU,IAGCE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,KAAD,CACEH,cAAeA,EACfI,iBAAkBV,EAClBW,SATiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BL,EAASM,EAAAA,GAAAA,MAAqBF,IAC9BC,KAIA,UAKE,UAACE,EAAA,EAAD,CACEC,UAAU,OACVC,GAAI,CACFC,GAAI,EACJC,UAAW,UAJf,WAOE,SAACC,EAAA,EAAD,CACEC,OAAO,SACPjB,UAAQ,EACRkB,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,KAEX,SAACP,EAAA,EAAD,CACEC,OAAO,SACPjB,UAAQ,EACRkB,WAAS,EACTG,KAAK,WACLD,MAAM,WACNI,KAAK,WACLL,GAAG,WACHG,aAAa,sBAYf,SAACG,EAAA,EAAD,CAAQD,KAAK,SAASE,QAAQ,YAAYb,GAAI,CAAEC,GAAI,EAAGa,GAAI,EAAGC,GAAI,GAAlE,2B,+ECjEFC,GAAQC,EAAAA,EAAAA,KAwDd,EAtDc,WACZ,OACE,SAACC,EAAA,EAAD,CAAeF,MAAOA,EAAtB,UACE,UAACG,EAAA,GAAD,CAAMC,WAAS,EAACrB,UAAU,OAAOC,GAAI,CAAEqB,OAAQ,SAA/C,WACE,SAACC,EAAA,GAAD,KACA,SAACH,EAAA,GAAD,CACEI,MAAI,EACJC,IAAI,EACJC,GAAI,EACJC,GAAI,EACJ1B,GAAI,CACF2B,gBAAiB,0CACjBC,iBAAkB,YAClBC,gBAAiB,SAAAC,GAAC,MACG,UAAnBA,EAAEC,QAAQC,KACNF,EAAEC,QAAQE,KAAK,IACfH,EAAEC,QAAQE,KAAK,MACrBC,eAAgB,QAChBC,mBAAoB,aAGxB,SAAChB,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAG3B,UAAWqC,EAAAA,EAAOC,UAAW,EAAGC,QAAM,EAAvE,UACE,UAACxC,EAAA,EAAD,CAMEE,GAAI,CACFuC,GAAI,EACJC,GAAI,EACJC,QAAS,OACTC,cAAe,SACfC,WAAY,UAXhB,WAcE,SAACC,EAAA,EAAD,CAAQ5C,GAAI,CAAE6C,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYjD,UAAU,KAAKc,QAAQ,KAAnC,sBAGA,SAACvB,EAAD","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport Button from '@mui/material/Button';\n// import { FormEl } from './LoginForm.styled';\nimport { Box, TextField } from '@mui/material';\n// import { FormEl, Label, Input, ErrorText, Button } from './LoginForm.styled';\n\nconst schema = yup.object().shape({\n  email: yup.string().required(),\n  password: yup.string().required(),\n});\n\n// const FormError = ({ name }) => {\n//   return (\n//     <ErrorMessage\n//       name={name}\n//       render={message => <ErrorText>{message}</ErrorText>}\n//     />\n//   );\n// };\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(authOperations.logIn(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Box\n        component=\"form\"\n        sx={{\n          mt: 1,\n          textAlign: 'center',\n        }}\n      >\n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          autoFocus\n        />\n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        />\n        {/* <Label>\n          <span>Email</span>\n          <Input type=\"email\" name=\"email\" />\n          <FormError name=\"email\" />\n        </Label>\n        <Label>\n          <span>Password</span>\n          <Input type=\"password\" name=\"password\" />\n          <FormError name=\"password\" />\n        </Label> */}\n        <Button type=\"submit\" variant=\"contained\" sx={{ mt: 3, mb: 2, px: 3 }}>\n          Sign In\n        </Button>\n        {/* <Grid container>\n          <Grid item>\n            <Link component={RouterLink} to=\"/register\" variant=\"body2\">\n              {\"Don't have an account? Sign Up\"}\n            </Link>\n          </Grid>\n        </Grid> */}\n      </Box>\n    </Formik>\n  );\n};\n\n/* <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 1 }}>\n  <TextField\n    margin=\"normal\"\n    required\n    fullWidth\n    id=\"email\"\n    label=\"Email Address\"\n    name=\"email\"\n    autoComplete=\"email\"\n    autoFocus\n  />\n  <TextField\n    margin=\"normal\"\n    required\n    fullWidth\n    name=\"password\"\n    label=\"Password\"\n    type=\"password\"\n    id=\"password\"\n    autoComplete=\"current-password\"\n  />\n  <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\n    Sign In\n  </Button>\n  <Grid container>\n    <Grid item xs>\n      <Link href=\"#\" variant=\"body2\">\n        Forgot password?\n      </Link>\n    </Grid>\n    <Grid item>\n      <Link href=\"#\" variant=\"body2\">\n        {\"Don't have an account? Sign Up\"}\n      </Link>\n    </Grid>\n  </Grid>\n</Box>; */\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport {\n  Avatar,\n  Box,\n  CssBaseline,\n  Grid,\n  Paper,\n  Typography,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n// import { Title } from './Titles.styled';\n\nconst theme = createTheme();\n\nconst Login = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" sx={{ height: '100vh' }}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: 'url(https://source.unsplash.com/random)',\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: t =>\n              t.palette.mode === 'light'\n                ? t.palette.grey[50]\n                : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            // mx={4}\n            // my={5}\n            // alignItems=\"center\"\n            // display=\"flex\"\n            // flexDirection=\"column\"\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <LoginForm />\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n    // <Box color=\"black\" pl={3} pr={3} m=\"32px auto\" width={1}>\n    //   <h2>Sign in</h2>\n    //   <LoginForm />\n    // </Box>\n  );\n};\n\nexport default Login;\n"],"names":["schema","yup","shape","email","required","password","initialValues","LoginForm","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","authOperations","Box","component","sx","mt","textAlign","TextField","margin","fullWidth","id","label","name","autoComplete","autoFocus","type","Button","variant","mb","px","theme","createTheme","ThemeProvider","Grid","container","height","CssBaseline","item","xs","sm","md","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","my","mx","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography"],"sourceRoot":""}