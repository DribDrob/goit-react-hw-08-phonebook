{"version":3,"file":"static/js/274.c27bda7e.chunk.js","mappings":"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","sources":["components/Box.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","hooks/useContacts.js","components/ContactFilter/ContactFilter.styled.jsx","components/ContactFilter/ContactFilter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { color, space, layout } from 'styled-system';\n\nexport const Box = styled('div')(color, space, layout);\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormEl = styled(Form)`\n  margin-bottom: 32px;\n  border: 2px dotted;\n  padding: 16px;\n  width: 380px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 16px;\n  gap: 4px;\n`;\nexport const Input = styled(Field)`\n  width: 100%;\n  font-size: 14px;\n`;\n\nexport const ErrorText = styled.p`\n  color: red;\n  font-size: 12px;\n`;\n\nexport const Button = styled.button`\n  padding: 4px 16px;\n  cursor: pointer;\n  font-family: inherit;\n  color: white;\n  background-color: #6fa7f0;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border: 0;\n  border-radius: 4px;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n// import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// import {\n//   useAddContactMutation,\n//   useGetContactsQuery,\n// } from 'redux/contacts/contactsSlice';\nimport { FormEl, Label, Input, ErrorText, Button } from './ContactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from 'redux/contacts';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n  number: yup\n    .string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = (values, { resetForm }) => {\n    console.log(values);\n    dispatch(contactsOperations.add(values));\n    resetForm();\n  };\n\n  // const addContactItem = newContact => {\n  //   if (contacts.find(contact => contact.name === newContact.name)) {\n  //     toast.error(`${newContact.name} is already in contacts.`);\n  //     return;\n  //   }\n  //   addContact(newContact);\n  // };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormEl autoComplete=\"off\">\n        <Label>\n          <span>Name</span>\n          <Input type=\"text\" name=\"name\" />\n          <FormError name=\"name\" />\n        </Label>\n\n        <Label>\n          <span>Number</span>\n          <Input type=\"tel\" name=\"number\" />\n          <FormError name=\"number\" component=\"div\" />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </FormEl>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  margin-bottom: 8px;\n`;\nexport const ContactName = styled.p``;\nexport const ContactNumber = styled.p`\n  margin-left: 16px;\n`;\nexport const Button = styled.button`\n  margin-left: auto;\n  padding: 2px 8px;\n  cursor: pointer;\n  font-family: inherit;\n  color: white;\n  background-color: #96bbeb;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border: 0;\n  border-radius: 4px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\nimport { Item, ContactName, ContactNumber, Button } from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const isContactsLoading = useSelector(contactsSelectors.isContactsLoading);\n  const dispatch = useDispatch();\n  return (\n    <Item>\n      <ContactName>{name}</ContactName>\n      <ContactNumber>{number}</ContactNumber>\n      <Button\n        disabled={isContactsLoading}\n        type=\"button\"\n        onClick={() => dispatch(contactsOperations.remove(id))}\n      >\n        Delete\n      </Button>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 16px;\n  width: 380px;\n`;\n","import PropTypes from 'prop-types';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = ({ contacts }) => {\n  return (\n    <List>\n      {contacts.map(contact => (\n        <ContactItem key={contact.id} {...contact} />\n      ))}\n    </List>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport {  contactsSelectors } from 'redux/contacts';\n\nexport const useContacts = () => {\n   const contacts = useSelector(contactsSelectors.getContacts);\n  const [filter, setFilter] = useState('');\n  \n  const filteredContacts = useMemo(() => {\n    return (\n      contacts?.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      ) ?? []\n    );\n  }, [contacts, filter]);\n\n  return {\n    filter,\n    setFilter,\n    filteredContacts,\n  };\n};","import styled from 'styled-components';\n\nexport const FilterField = styled.label`\n  display: flex;\n  margin-bottom: 8px;\n  width: 380px;\n  > input {\n    margin-left: auto;\n  }\n`;\n","import { useContacts } from 'hooks/useContacts';\nimport { FilterField } from './ContactFilter.styled';\n\nexport const ContactFilter = () => {\n  const { filter, setFilter } = useContacts();\n\n  return (\n    <FilterField>\n      <span>Find contacts by name</span>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={e => setFilter(e.currentTarget.value)}\n      />\n    </FilterField>\n  );\n};\n","import { Box } from '../components/Box';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { useDispatch } from 'react-redux';\n// import { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ToastContainer } from 'react-toastify';\nimport { contactsOperations } from 'redux/contacts';\nimport { useEffect } from 'react';\n// import { Title, Subtitle } from './Titles.styled';\n// import { Loader } from './Loader/Loader';\nimport { useContacts } from 'hooks/useContacts';\nimport { ContactFilter } from 'components/ContactFilter/ContactFilter';\n\nconst Contacts = () => {\n  const { filteredContacts } = useContacts();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.get());\n  }, [dispatch]);\n\n  return (\n    <Box color=\"black\" pl={3} pr={3} m=\"32px auto\" width={1}>\n      <h2>Phonebook</h2>\n      <ContactForm />\n      <h3>Contacts</h3>\n      <ContactFilter />\n      {/* {isFetching && <Loader />} */}\n      {filteredContacts.length !== 0 && (\n        <ContactList contacts={filteredContacts} />\n      )}\n      <ToastContainer autoClose={3000} />\n    </Box>\n  );\n};\n\nexport default Contacts;\n"],"names":["Box","styled","color","space","layout","FormEl","Form","Label","Input","Field","ErrorText","Button","schema","yup","shape","name","matches","required","number","FormError","render","message","initialValues","ContactForm","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","console","log","contactsOperations","autoComplete","type","component","Item","ContactName","ContactNumber","ContactItem","id","isContactsLoading","useSelector","contactsSelectors","disabled","onClick","List","ContactList","contacts","map","contact","useContacts","useState","filter","setFilter","filteredContacts","useMemo","toLowerCase","includes","FilterField","ContactFilter","value","onChange","e","currentTarget","useEffect","pl","pr","m","width","length","autoClose"],"sourceRoot":""}